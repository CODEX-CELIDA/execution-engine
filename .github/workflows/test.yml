name: Python package

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  pytest:

    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    #container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Clone Submodule
        run: |
            mkdir -p $HOME/.ssh
            echo '${{ secrets.SUBMODULE_REPO_DEPLOY_KEY }}' > $HOME/.ssh/ssh.key
            chmod 600 $HOME/.ssh/ssh.key
            export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/ssh.key"
            git submodule set-url tests/omop_cdm git@github.com:CODEX-CELIDA/omop-test-vocabulary.git
            git submodule update --init --recursive
            git submodule set-url tests/omop_cdm https://github.com/CODEX-CELIDA/omop-test-vocabulary.git
            unset GIT_SSH_COMMAND

      - name: Checkout celida recommendation server
        uses: actions/checkout@v3
        with:
          repository: CODEX-CELIDA/recommendation-server
          path: recommendation-server

      - name: Run celida recommendations docker
        run: |
          docker volume prune -f
          docker pull glichtner/celida-recommendation-server:main
          docker run --env-file recommendation-server/celida.env -dp 8000:80 glichtner/celida-recommendation-server:main

      - name: Wait for Recommendation Server startup
        run: sleep 10s
        shell: bash

      - name: Test Recommendation Server
        run: |
          curl http://localhost:8000/fhir/ActivityDefinition?url=https://www.netzwerk-universitaetsmedizin.de/fhir/codex-celida/guideline/covid19-inpatient-therapy/recommended-action/drug-administration-action/no-antithrombotic-prophylaxis-nadroparin-administration-low-weight

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - run: pip install -r requirements.txt
      - run: pip install -r requirements-dev.txt
      - run: mv sample.env .env

      - name: Test with pytest
        run: |
           pytest \
            --postgresql-host=$POSTGRES_HOST \
            --postgresql-port=$POSTGRES_PORT \
            --postgresql-user=$POSTGRES_USER \
            --postgresql-password=$POSTGRES_PASSWORD
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          # The default PostgreSQL user
          POSTGRES_USER: postgres
          # The password for the PostgreSQL user
          POSTGRES_PASSWORD: postgres
